# ref: https://hub.docker.com/r/itzg/minecraft-server/
image: itzg/minecraft-server
imageTag: latest

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  requests:
    memory: 3Gi
    cpu: 0.5
  limits:
    memory: 9Gi
    cpu: 1.5

nodeSelector: {}

tolerations: []

affinity: {}

# Most of these map to environment variables. See Minecraft for details:
# https://hub.docker.com/r/itzg/minecraft-server/
livenessProbe:
  initialDelaySeconds: 30
  periodSeconds: 10
  failureThreshold: 3
  successThreshold: 1
  timeoutSeconds: 5

minecraftServer:
  serviceAnnotations: {}
  serviceType: LoadBalancer
  loadBalancerIP: 34.89.229.103
  # loadBalancerSourceRanges: []
  ## Set the externalTrafficPolicy in the Service to either Cluster or Local
  # externalTrafficPolicy: Cluster
  externalIPs:

  ## Additional minecraft container environment variables
  env:
    EULA: "TRUE"
    TYPE: "PAPER"
    VERSION: "1.16.3"
    SEED: "fshhu"
    MOTD: "HHU Inofficial Anarchy Server"
  # TODO
    ICON: "https://raw.githubusercontent.com/Paul1365972/fshhu-server/master/icons/hhu-logo.png"
    DIFFICULTY: "hard"
    SPAWN_PROTECTION: "0"
    VIEW_DISTANCE: "12"
    MAX_PLAYERS: "50"
    MAX_TICK_TIME: "-1"
    OPS: "Paul1365972"
    OVERRIDE_SERVER_PROPERTIES: "true"
    USE_AIKAR_FLAGS: "true"
    INIT_MEMORY: "2G"
    MAX_MEMORY: "9G"
    ENABLE_AUTOPAUSE: "TRUE"
    AUTOPAUSE_TIMEOUT_INIT: "90"
    AUTOPAUSE_TIMEOUT_KN: "30"
    AUTOPAUSE_TIMEOUT_EST: "60"
    AUTOPAUSE_PERIOD: "15"
    JVM_DD_OPTS: "disable.watchdog:true"

persistence:
  ## minecraft data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass: "fast"
  dataDir:
    # Set this to false if you don't care to persist state between restarts.
    enabled: true
    # existingClaim: nil
    size: 5Gi

podAnnotations: {}

deploymentAnnotations: {}
